name: test-build-deploy

on:
  pull_request:
    # paths: ["src/**"]

jobs:
  test-build-deploy:
    name: Application test build & deploy
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_ROOT_PASSWORD: mypassword
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_DATABASE: appdb
        ports:
          - "27017:27017"

      redis:
        image: redis
        ports:
          - "6379:6379"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.17.1"

      - name: Install
        run: npm i

      - name: Build
        run: npm run build

      - name: Test
        run: DB_URL=${{ vars.DB_URL }} npm run test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: app_image
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG